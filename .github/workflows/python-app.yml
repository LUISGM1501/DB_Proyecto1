# .github/workflows/python-app.yml
name: Docker Build and Python Tests

on:
  push

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      # Step 4: Set environment variables
      - name: Set Environment Variables
        run: |
          echo "DB_HOST_POSTGRES=postgres" >> $GITHUB_ENV
          echo "DB_PORT_POSTGRES=5432" >> $GITHUB_ENV
          echo "DB_HOST_MONGO=mongodb" >> $GITHUB_ENV
          echo "DB_PORT_MONGO=27017" >> $GITHUB_ENV
          echo "DB_USER=myuser" >> $GITHUB_ENV
          echo "DB_PASSWORD=mypassword" >> $GITHUB_ENV
          echo "JWT_SECRET=supersecretkey" >> $GITHUB_ENV
          echo "REDIS_HOST=redis" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV

      # Step 5: Build Docker Images
      - name: Build Docker images
        run: docker-compose build

      # Step 6: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}  # Aseg√∫rate de que este token tiene los permisos necesarios

      # Step 7: Tag and Push Docker Image to GitHub Container Registry
      - name: Tag and Push Docker Image to GitHub Container Registry
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker tag db_proyecto1_backend ghcr.io/$REPO_NAME/backend:latest
          docker push ghcr.io/$REPO_NAME/backend:latest



